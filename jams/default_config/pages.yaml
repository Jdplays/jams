pages:

  # Child Pages
  edit_workshop_worksheet:
    endpoint: routes.frontend.private.management.edit_workshop_worksheet
    backend_endpoints:
      routes.resources.get_workshop_file:
      routes.resources.get_file_versions:
      routes.backend.private.management.get_file_data:
      routes.backend.private.management.edit_file_data:
      routes.backend.private.management.add_worksheet:
      routes.backend.private.management.get_workshop_field:
        allowed_fields: id, name

  # Admin
  settings:
    endpoint: routes.frontend.private.admin.settings
    backend_endpoints:
      routes.backend.private.admin.get_roles:
      routes.backend.private.admin.get_role:
      routes.backend.private.admin.add_role:
      routes.backend.private.admin.edit_role:
      routes.backend.private.admin.delete_role:
      routes.backend.private.admin.get_pages:
      routes.backend.private.admin.get_pages_field:
        allowed_fields: id, name, parent_id

  user_management:
    endpoint: routes.frontend.private.admin.user_management
    backend_endpoints:
      routes.backend.private.admin.get_users:
      routes.backend.private.admin.get_user_field:
        allowed_fields: id, role_ids
      routes.backend.private.admin.edit_user:
      routes.backend.private.admin.archive_user:
      routes.backend.private.admin.activate_user:
      routes.backend.private.admin.get_roles_field:
        allowed_fields: id, name

  events:
    endpoint: routes.frontend.private.admin.events
    backend_endpoints:
      routes.backend.private.admin.get_events:
      routes.backend.private.admin.get_event:
      routes.backend.private.admin.add_event:
      routes.backend.private.admin.edit_event:
      routes.backend.private.admin.archive_event:
      routes.backend.private.admin.activate_event:

  schedule_planner:
    endpoint: routes.frontend.private.admin.schedule_planner
    backend_endpoints:
      # Events
      routes.backend.private.admin.get_events_field:
        allowed_fields: id, name
      routes.backend.private.admin.get_event:
      # Workshops
      routes.backend.private.management.get_workshops:
      routes.backend.private.management.get_difficulty_levels:
      # Event Locations
      routes.backend.private.management.get_locations:
      routes.backend.private.admin.get_event_locations:
      routes.backend.private.admin.add_event_location:
      routes.backend.private.admin.update_event_location_order:
      routes.backend.private.admin.delete_event_location:
      # Event Timeslots
      routes.backend.private.management.get_timeslots:
      routes.backend.private.admin.get_event_timeslots:
      routes.backend.private.admin.add_event_timeslot:
      routes.backend.private.admin.delete_event_timeslot:
      # Sessions
      routes.backend.private.admin.get_event_sessions:
      routes.backend.private.admin.add_workshop_to_session:
      routes.backend.private.admin.remove_workshop_from_session:

  # Management
  workshop_catalog:
    endpoint: routes.frontend.private.management.workshop_catalog
    child_pages:
      - edit_workshop_worksheet
    backend_endpoints:
      routes.backend.private.management.get_workshops:
      routes.backend.private.management.get_workshop:
      routes.backend.private.management.add_workshop:
      routes.backend.private.management.edit_workshop:
      routes.backend.private.management.archive_workshop:
      routes.backend.private.management.activate_workshop:
      routes.backend.private.management.get_difficulty_levels:
      routes.backend.private.management.get_difficulty_level:
      routes.backend.private.management.get_workshop_files:
      routes.backend.private.management.add_worksheet:


  locations_timeslots:
    endpoint: routes.frontend.private.management.locations_timeslots
    backend_endpoints:
      routes.backend.private.management.get_locations:
      routes.backend.private.management.get_location:
      routes.backend.private.management.add_location:
      routes.backend.private.management.edit_location:
      routes.backend.private.management.archive_location:
      routes.backend.private.management.activate_location:
      routes.backend.private.management.get_timeslots:
      routes.backend.private.management.get_timeslot:
      routes.backend.private.management.add_timeslot:
      routes.backend.private.management.edit_timeslot:
      routes.backend.private.management.archive_timeslot:
      routes.backend.private.management.activate_timeslot:

  # Volunteer`
  volunteer_attendance:
    endpoint: routes.frontend.private.volunteer.volunteer_attendance
    backend_endpoints:
      routes.backend.private.admin.get_roles_field:
        allowed_fields: id, name
      routes.backend.private.admin.get_users_field:
        allowed_fields: id, display_name, role_ids
      routes.backend.private.volunteer.get_event_attendance:
      routes.backend.private.volunteer.get_user_attendance:
      routes.backend.private.volunteer.add_user_attendance:
      routes.backend.private.volunteer.edit_user_attendance:

  # Monitoring
  private_access_log:
    endpoint: routes.frontend.private.monitoring.private_access_log
    backend_endpoints:
      routes.backend.private.monitoring.get_private_access_logs:


  # -------------------------------- PUBLIC  -------------------------------- #
  public_schedule:
    endpoint: routes.frontend.public.public_schedule
    public: true
    backend_endpoints:
      routes.backend.private.management.get_workshops:
      routes.backend.private.management.get_difficulty_levels:
      routes.backend.private.admin.get_event_locations:
      routes.backend.private.management.get_locations:
      routes.backend.private.admin.get_event_timeslots:
      routes.backend.private.management.get_timeslots:
      routes.backend.private.admin.get_event_sessions:

