pages:

# Child Pages
  # Workshops
  # Events
  add_workshop:
    endpoint: routes.frontend.private.management.add_workshop
    api_endpoints:
      routes.api_v1.private.management.get_difficulty_levels:
      routes.api_v1.private.management.add_workshop:
      routes.api_v1.private.management.get_workshops_field:
        allowed_fields: id, name
      
  
  edit_workshop:
    endpoint: routes.frontend.private.management.edit_workshop
    api_endpoints:
      routes.api_v1.private.management.get_workshop:
      routes.api_v1.private.management.get_difficulty_levels:
      routes.api_v1.private.management.get_difficulty_level:
      routes.api_v1.private.management.get_workshops_field:
        allowed_fields: id, name
      routes.api_v1.private.management.edit_workshop:
      routes.api_v1.private.management.add_workshop_file:


  edit_workshop_file:
    endpoint: routes.frontend.private.management.edit_workshop_file
    api_endpoints:
      routes.resources.get_workshop_file:
      routes.resources.get_file_versions:
      routes.api_v1.private.management.get_file_data:
      routes.api_v1.private.management.edit_file_data:
      routes.api_v1.private.management.add_workshop_file:
      routes.api_v1.private.management.archive_workshop_file:
      routes.api_v1.private.management.activate_workshop_file:
      routes.api_v1.private.management.get_workshop_field:
        allowed_fields: id, name
  
  # Settings
  settings_eventbrite:
    endpoint: routes.frontend.private.admin.settings_eventbrite
    api_endpoints:
      routes.api_v1.integrations.eventbrite.verify:
      routes.api_v1.integrations.eventbrite.get_organisations:
      routes.api_v1.integrations.eventbrite.get_config:
      routes.api_v1.integrations.eventbrite.edit_config:
      routes.api_v1.integrations.eventbrite.enable:
      routes.api_v1.integrations.eventbrite.disable:
      routes.api_v1.integrations.eventbrite.get_ticket_types:
      routes.api_v1.integrations.eventbrite.get_custom_questions:

  settings_auth_sources:
    endpoint: routes.frontend.private.admin.settings_auth_sources
    api_endpoints:
      routes.api_v1.integrations.auth.get_config:
      routes.api_v1.integrations.auth.edit_config:
      routes.api_v1.integrations.auth.delete_config:

  settings_roles:
    endpoint: routes.frontend.private.admin.settings_roles
    api_endpoints:
      routes.api_v1.private.admin.get_roles:
      routes.api_v1.private.admin.get_role:
      routes.api_v1.private.admin.add_role:
      routes.api_v1.private.admin.edit_role:
      routes.api_v1.private.admin.delete_role:
      routes.api_v1.private.admin.get_pages:
      routes.api_v1.private.admin.get_pages_field:
        allowed_fields: id, name, parent_id

  # Events
  add_event:
    endpoint: routes.frontend.private.admin.add_event
    api_endpoints:
      routes.api_v1.private.admin.add_event:
      routes.api_v1.integrations.eventbrite.get_events:
      routes.api_v1.private.admin.get_events_field:
        allowed_fields: id, name
  
  edit_event:
    endpoint: routes.frontend.private.admin.edit_event
    api_endpoints:
      routes.api_v1.private.admin.get_event:
      routes.api_v1.private.admin.edit_event:
      routes.api_v1.private.admin.get_events_field:
        allowed_fields: id, name
  
  # Logs
  private_access_log:
    endpoint: routes.frontend.private.monitoring.private_access_log
    api_endpoints:
      routes.api_v1.private.monitoring.get_private_access_logs:
      routes.api_v1.private.admin.archive_user:
  
  task_scheduler_log:
    endpoint: routes.frontend.private.monitoring.task_scheduler_log
    api_endpoints:
      routes.api_v1.private.monitoring.get_task_scheduler_logs:

  webhooks_log:
    endpoint: routes.frontend.private.monitoring.webhooks_log
    api_endpoints:
      routes.api_v1.private.monitoring.get_webhook_logs:

  external_api_log:
    endpoint: routes.frontend.private.monitoring.external_api_log
    api_endpoints:
      routes.api_v1.private.monitoring.get_external_api_logs:

# Normal Pages
  # Admin
  settings:
    endpoint: routes.frontend.private.admin.settings
    child_pages:
      - settings_roles
      - settings_eventbrite
      - settings_auth_sources

  user_management:
    endpoint: routes.frontend.private.admin.user_management
    api_endpoints:
      routes.api_v1.private.admin.get_users:
      routes.api_v1.private.admin.get_user_field:
        allowed_fields: id, role_ids
      routes.api_v1.private.admin.edit_user:
      routes.api_v1.private.admin.archive_user:
      routes.api_v1.private.admin.activate_user:
      routes.api_v1.private.admin.get_roles_field:
        allowed_fields: id, name

  events:
    endpoint: routes.frontend.private.admin.events
    child_pages:
      - add_event
      - edit_event
    api_endpoints:
      routes.api_v1.private.admin.get_events:
      routes.api_v1.private.admin.archive_event:
      routes.api_v1.private.admin.activate_event:

  schedule_planner:
    endpoint: routes.frontend.private.admin.schedule_planner
    api_endpoints:
      # Events
      routes.api_v1.private.admin.get_events_field:
        allowed_fields: id, name
      routes.api_v1.private.admin.get_event:
      # Workshops
      routes.api_v1.private.management.get_workshops:
      routes.api_v1.private.management.get_difficulty_levels:
      routes.api_v1.private.management.get_workshop_types:
      # Event Locations
      routes.api_v1.private.management.get_locations:
      routes.api_v1.private.admin.get_event_locations:
      routes.api_v1.private.admin.add_event_location:
      routes.api_v1.private.admin.update_event_location_order:
      routes.api_v1.private.admin.delete_event_location:
      # Event Timeslots
      routes.api_v1.private.management.get_timeslots:
      routes.api_v1.private.admin.get_event_timeslots:
      routes.api_v1.private.admin.add_event_timeslot:
      routes.api_v1.private.admin.delete_event_timeslot:
      # Sessions
      routes.api_v1.private.admin.get_event_sessions:
      routes.api_v1.private.admin.add_workshop_to_session:
      routes.api_v1.private.admin.remove_workshop_from_session:

  # Management
  workshops:
    endpoint: routes.frontend.private.management.workshops
    child_pages:
      - add_workshop
      - edit_workshop
      - edit_workshop_file
    api_endpoints:
      routes.api_v1.private.management.get_workshops:
      routes.api_v1.private.management.archive_workshop:
      routes.api_v1.private.management.activate_workshop:
      routes.api_v1.private.management.get_difficulty_levels:
      routes.api_v1.private.management.get_workshop_types:
      routes.api_v1.private.management.get_workshop_files:


  locations_timeslots:
    endpoint: routes.frontend.private.management.locations_timeslots
    api_endpoints:
      routes.api_v1.private.management.get_locations:
      routes.api_v1.private.management.get_location:
      routes.api_v1.private.management.add_location:
      routes.api_v1.private.management.edit_location:
      routes.api_v1.private.management.archive_location:
      routes.api_v1.private.management.activate_location:
      routes.api_v1.private.management.get_timeslots:
      routes.api_v1.private.management.get_timeslot:
      routes.api_v1.private.management.add_timeslot:
      routes.api_v1.private.management.edit_timeslot:
      routes.api_v1.private.management.archive_timeslot:
      routes.api_v1.private.management.activate_timeslot:

  # Volunteer`
  volunteer_attendance:
    endpoint: routes.frontend.private.volunteer.volunteer_attendance
    api_endpoints:
      routes.api_v1.private.admin.get_roles_field:
        allowed_fields: id, name
      routes.api_v1.private.admin.get_users_field:
        allowed_fields: id, display_name, role_ids
      routes.api_v1.private.admin.get_event_field:
        allowed_fields: id, name, date
      routes.api_v1.private.volunteer.get_event_attendance:
      routes.api_v1.private.volunteer.get_user_attendance:
      routes.api_v1.private.volunteer.add_user_attendance:
      routes.api_v1.private.volunteer.edit_user_attendance:

  volunteer_signup:
    endpoint: routes.frontend.private.volunteer.volunteer_signup
    api_endpoints:
      routes.api_v1.private.admin.get_event_field:
        allowed_fields: id, name, date
      routes.api_v1.private.admin.get_events_field:
        allowed_fields: id, name, date
      routes.api_v1.private.admin.get_users_public_info:
      routes.api_v1.private.volunteer.get_event_attendance:
      routes.api_v1.private.volunteer.add_user_attendance:
      routes.api_v1.private.volunteer.get_event_volunteer_signups:
      routes.api_v1.private.volunteer.add_volunteer_signup:
      routes.api_v1.private.volunteer.remove_volunteer_signup:
      # Schedule Grid
      routes.api_v1.private.management.get_workshops:
      routes.api_v1.private.management.get_difficulty_levels:
      routes.api_v1.private.management.get_workshop_types:
      routes.api_v1.private.admin.get_event_locations:
      routes.api_v1.private.management.get_locations:
      routes.api_v1.private.admin.get_event_timeslots:
      routes.api_v1.private.management.get_timeslots:
      routes.api_v1.private.admin.get_event_sessions:
      

  # Monitoring
  logs:
    endpoint: routes.frontend.private.monitoring.logs
    child_pages:
      - private_access_log
      - task_scheduler_log
      - webhooks_log
      - external_api_log
    api_endpoints:
      routes.api_v1.private.monitoring.get_private_access_logs_metadata:
      routes.api_v1.private.monitoring.get_task_scheduler_logs_metadata:
      routes.api_v1.private.monitoring.get_webhook_logs_metadata:
      routes.api_v1.private.monitoring.get_external_api_logs_metadata:
      


  # -------------------------------- PUBLIC  -------------------------------- #
  public_schedule:
    endpoint: routes.frontend.public.public_schedule
    public: true
    api_endpoints:
      routes.api_v1.private.management.get_workshops:
      routes.api_v1.private.management.get_difficulty_levels:
      routes.api_v1.private.management.get_workshop_types:
      routes.api_v1.private.admin.get_event_locations:
      routes.api_v1.private.management.get_locations:
      routes.api_v1.private.admin.get_event_timeslots:
      routes.api_v1.private.management.get_timeslots:
      routes.api_v1.private.admin.get_event_sessions:

